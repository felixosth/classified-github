// <auto-generated />
using InSupport.O3C.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InSupport.O3C.API.Migrations
{
    [DbContext(typeof(O3CDeviceDbContext))]
    [Migration("20210915111130_o3c_externalhost")]
    partial class o3c_externalhost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InSupport.O3C.API.Models.O3CDevice", b =>
                {
                    b.Property<string>("MAC")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Firmware")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUp")
                        .HasColumnType("bit");

                    b.Property<string>("O3CServer")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MAC");

                    b.HasIndex("MAC")
                        .IsUnique();

                    b.HasIndex("O3CServer");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("InSupport.O3C.API.Models.O3CServer", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AdminPort")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyLoadBalancing")
                        .HasColumnType("bit");

                    b.Property<int>("ClientPort")
                        .HasColumnType("int");

                    b.Property<int>("ClusterId")
                        .HasColumnType("int");

                    b.Property<string>("ExternalHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsUp")
                        .HasColumnType("bit");

                    b.HasKey("Name");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Servers");
                });
#pragma warning restore 612, 618
        }
    }
}
